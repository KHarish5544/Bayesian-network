import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.naive_bayes import GaussianNB
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix
import matplotlib.pyplot as plt
import seaborn as sns
# Load data from CSV file
data = pd.read_csv(&quot;results.csv&quot;)
print(data)
# Assuming the last column is the target column and rest are features
X = data.loc[:, [&quot;Hours&quot;, &quot;StudentId&quot;]] # Features
y = data[&quot;Result&quot;] # Target
new=pd.DataFrame(X,y)
print(new)
# Split data into train and test sets (80% train, 20% test)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
# Initialize Naive Bayes classifier
classifier = GaussianNB()
classifier.fit(X_train, y_train)
# Calculate accuracy
accuracy = accuracy_score(y_test, y_pred)
print(&quot;Accuracy:&quot;, accuracy)
# Classification report
print(&quot;Classification Report:&quot;)
print(classification_report(y_test, y_pred))
# Calculate false percentage
false_percentage = (1 - accuracy) * 100
print(&quot;False Percentage:&quot;, false_percentage)
new=pd.DataFrame(X_test,y_pred)
print(new)
conf_matrix = confusion_matrix(y_test, y_pred)
conf_matrix
# Plot confusion matrix
plt.figure(figsize=(8, 6))
sns.heatmap(conf_matrix, annot=True, fmt=&quot;d&quot;, cmap=&quot;Blues&quot;, cbar=False)
plt.title(&quot;Confusion Matrix&quot;)
plt.xlabel(&quot;Predicted Labels&quot;)
plt.ylabel(&quot;True Labels&quot;)
plt.show()
